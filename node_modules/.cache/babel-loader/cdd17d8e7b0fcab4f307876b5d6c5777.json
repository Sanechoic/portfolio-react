{"ast":null,"code":"var _jsxFileName = \"/Users/william/Documents/GitHub/portfolio/src/components/projectPage/projectCarousel.js\";\nimport React, { useEffect, useRef, useState } from 'react'; // Import the Component component from React\n\nimport Carousel from 'nuka-carousel';\n\nfunction ProjectCarousel(props) {\n  // Fixes Carousel not loading initially\n  const carouselRef = useRef(null); // Toggle slide info\n\n  const [infoShow, changeInfoShow] = useState(true);\n  useEffect(() => {\n    setTimeout(() => {\n      carouselRef.current.onResize();\n    }, 0);\n  }, [infoShow]); // Changes slide info based on slide\n\n  const [currentSlide, changeSlide] = useState(0);\n  const [infoOpacity, changeOpacity] = useState(1);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"carouselWrapper \" + (infoShow ? null : \"cwFull\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Carousel, {\n    afterSlide: currentIndex => {\n      changeSlide(currentIndex);\n      changeOpacity(1);\n    },\n    enableKeyboardControls: true,\n    slideIndex: currentSlide,\n    disableEdgeSwiping: true,\n    className: \"carousel\",\n    disableAnimation: false,\n    heightMode: \"max\",\n    speed: 500,\n    width: \"100%\",\n    vertical: false,\n    ref: carouselRef,\n    renderCenterLeftControls: null,\n    renderCenterRightControls: null,\n    renderBottomLeftControls: ({\n      previousSlide,\n      slideCount\n    }) => /*#__PURE__*/React.createElement(\"button\", {\n      className: `carouselPrev shift-left ${currentSlide === 0 ? \"invis\" : \"\"}`,\n      onClick: previousSlide,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-long-arrow-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    })),\n    renderBottomRightControls: ({\n      nextSlide,\n      slideCount\n    }) => /*#__PURE__*/React.createElement(\"button\", {\n      className: `carouselNext ${currentSlide === slideCount - 1 ? \"rotateACW\" : \"shift-right\"}`,\n      onClick: currentSlide === slideCount - 1 ? () => changeSlide(0) : nextSlide,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: `${currentSlide === slideCount - 1 ? \"fa fa-repeat fa-flip-horizontal\" : \"fa fa-long-arrow-right\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    })),\n    defaultControlsConfig: {\n      pagingDotsStyle: {\n        fill: \"#4A03FF\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, props.slides)), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"moreInfo\",\n    onClick: () => {\n      changeInfoShow(!infoShow);\n    },\n    style: {\n      zIndex: \"10\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, `${infoShow ? \"Less Info\" : \"More Info\"}`), /*#__PURE__*/React.createElement(\"div\", {\n    className: 'slideInfo ' + (infoShow ? null : \"collapsed-down\"),\n    style: {\n      opacity: infoOpacity\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, props.slideInfo[currentSlide]));\n}\n\nexport default ProjectCarousel;","map":{"version":3,"sources":["/Users/william/Documents/GitHub/portfolio/src/components/projectPage/projectCarousel.js"],"names":["React","useEffect","useRef","useState","Carousel","ProjectCarousel","props","carouselRef","infoShow","changeInfoShow","setTimeout","current","onResize","currentSlide","changeSlide","infoOpacity","changeOpacity","currentIndex","previousSlide","slideCount","nextSlide","pagingDotsStyle","fill","slides","zIndex","opacity","slideInfo"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'; // Import the Component component from React\nimport Carousel from 'nuka-carousel';\n\nfunction ProjectCarousel(props) {\n  // Fixes Carousel not loading initially\n  const carouselRef = useRef(null)\n  // Toggle slide info\n  const [infoShow, changeInfoShow] = useState(true)\n\n  useEffect(() => {\n    setTimeout(() => {carouselRef.current.onResize();}, 0);\n  }, [infoShow])\n\n  // Changes slide info based on slide\n  const [currentSlide, changeSlide] = useState(0);\n  const [infoOpacity, changeOpacity] = useState(1);\n\n\n  return(\n    <div>\n      <div className={\"carouselWrapper \"+ (infoShow ? null:\"cwFull\")}>\n        <Carousel\n          afterSlide={currentIndex => {changeSlide(currentIndex);  changeOpacity(1);}}\n          enableKeyboardControls={true}\n          slideIndex={currentSlide}\n          disableEdgeSwiping={true}\n          className=\"carousel\"\n          disableAnimation={false}\n          heightMode=\"max\"\n          speed={500}\n          width=\"100%\"\n          vertical={false}\n          ref={carouselRef}\n          renderCenterLeftControls={null}\n          renderCenterRightControls={null}\n          renderBottomLeftControls={({ previousSlide, slideCount }) => (\n            <button className={`carouselPrev shift-left ${currentSlide===0 ? \"invis\":\"\"}`} onClick={previousSlide}>\n              <i className=\"fa fa-long-arrow-left\" />\n            </button>\n          )}\n          renderBottomRightControls={({ nextSlide, slideCount }) => (\n            <button className={`carouselNext ${currentSlide===slideCount-1 ? \"rotateACW\":\"shift-right\"}`} onClick={currentSlide===slideCount-1 ? () => changeSlide(0):nextSlide}>\n              <i className={`${currentSlide===slideCount-1 ? \"fa fa-repeat fa-flip-horizontal\":\"fa fa-long-arrow-right\"}`}/>\n            </button>\n          )}\n          defaultControlsConfig={{\n            pagingDotsStyle: {\n              fill: \"#4A03FF\"\n            }\n          }}\n          >\n          {props.slides}\n        </Carousel>\n      </div>\n      <button className=\"moreInfo\" onClick={() => {changeInfoShow(!infoShow);}} style={{zIndex:\"10\"}}>{`${infoShow ? \"Less Info\":\"More Info\"}`}</button>\n      <div className={'slideInfo ' + (infoShow ? null:\"collapsed-down\")} style={{opacity:infoOpacity}}>\n        {props.slideInfo[currentSlide]}\n      </div>\n    </div>\n  )\n}\n\nexport default ProjectCarousel;\n"]},"metadata":{},"sourceType":"module"}