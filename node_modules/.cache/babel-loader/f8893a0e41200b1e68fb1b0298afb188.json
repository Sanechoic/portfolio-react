{"ast":null,"code":"var _jsxFileName = \"/Users/william/Documents/GitHub/portfolio/src/components/Projects.js\";\nimport React from 'react';\nimport Thumbnail from './Thumbnail.js'; // Import the Thumbnail component\n\nimport '../css/App.css';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport projectData from './projects.json';\n\nclass Projects extends React.Component {\n  constructor(props) {\n    super(props);\n    const balancingRobot = {\n      'key': 'balancingRobot',\n      'link': \"/balancingRobot\",\n      'image': require('./../content/projects/balancingRobot/thumbnail.png'),\n      'title': \"Strip The Willow\",\n      'question': \"How can **Signal Processing** be used to create a **Dancing Robot**?\",\n      'col': \"col-md-4\",\n      'category': ['cod'],\n      'month': 'April',\n      'year': '2018'\n    };\n    const beatbox = {\n      'key': 'beatbox',\n      'link': \"/beatbox\",\n      'image': require('./../content/projects/beatbox/thumbnail.jpg'),\n      'title': \"Beatbox\",\n      'question': \"How can **Heart Rate** be visualised using **Mechatronics**?\",\n      'col': \"col-md-4\",\n      'category': ['cod'],\n      'month': 'December',\n      'year': '2017'\n    };\n    const bigData = {\n      'key': 'bigData',\n      'link': \"/bigData\",\n      'image': require('./../content/projects/bigData/thumbnail.jpg'),\n      'title': \"Big Data\",\n      'question': \"How can **Data Analytics** be used to **Explain and Predict** knife crime in London ?\",\n      'col': \"col-md-4\",\n      'category': ['cod'],\n      'month': 'June',\n      'year': '2018'\n    };\n    const blueNote = {\n      'key': 'blueNote',\n      'link': \"/blueNote\",\n      'image': require('./../content/projects/blueNote/thumbnail.png'),\n      'title': \"BlueNote\",\n      'question': \"How can **Bluetooth Low Energy** be used to **Deliver Timely Notifications**?\",\n      'col': \"col-md-4\",\n      'category': ['cod', 'str'],\n      'month': 'January',\n      'year': '2020'\n    };\n    const embla = {\n      'key': 'embla',\n      'link': \"/embla\",\n      'image': require('./../content/projects/embla/thumbnail.png'),\n      'title': \"Embla\",\n      'question': \"How can **Workplace Environments** be designed to **Reduce Stress**?\",\n      'col': \"col-md-8\",\n      'category': ['str', 'des'],\n      'month': 'April',\n      'year': '2019'\n    };\n    const joyStory = {\n      'key': 'joyStory',\n      'link': \"/joyStory\",\n      'image': require('./../content/projects/joyStory/thumbnail.png'),\n      'title': \"JoyStory\",\n      'question': \"How can **A Collaborative Game** be used to **Build Relationships**?\",\n      'col': \"col-md-4\",\n      'category': ['cod', 'str'],\n      'month': 'March',\n      'year': '2020'\n    };\n    const jumpingRobot = {\n      'key': 'jumpingRobot',\n      'link': \"/jumpingRobot\",\n      'image': require('./../content/projects/jumpingRobot/thumbnail.png'),\n      'title': \"LeapFrog\",\n      'question': \"How can **Mechanics, Finite Element Analysis and 3D Modelling** be used to design a **Jumping Robot**?\",\n      'col': \"col-md-4\",\n      'category': ['eng'],\n      'month': 'April',\n      'year': '2018'\n    };\n    const pacman = {\n      'key': 'pacman',\n      'link': \"/pacman\",\n      'image': require('./../content/projects/pacman/thumbnail.png'),\n      'title': \"Pacman\",\n      'question': \"How can **Algorithm Design** be used to **Optimise** Pacman?\",\n      'col': \"col-md-4\",\n      'category': ['cod'],\n      'month': 'December',\n      'year': '2016'\n    };\n    const panaseer = {\n      'key': 'panaseer',\n      'link': \"/panaseer\",\n      'image': require('./../content/projects/panaseer/thumbnail.png'),\n      'title': \"Panaseer\",\n      'question': \"How can a **novel innovation in food sensing** be used to help **Allergy Sufferers**?\",\n      'col': \"col-md-4\",\n      'category': ['des'],\n      'month': 'March',\n      'year': '2019'\n    };\n    const pause = {\n      'key': 'pause',\n      'link': \"/pause\",\n      'image': require('./../content/projects/pause/thumbnail.png'),\n      'title': \"Pause\",\n      'question': \"How can **Behavioural Psychology** be used to address **Social Media Addiction**?\",\n      'col': \"col-md-4\",\n      'category': ['des'],\n      'month': 'March',\n      'year': '2020'\n    };\n    const peoplePod = {\n      'key': 'peoplePod',\n      'link': \"/peoplePod\",\n      'image': require('./../content/projects/peoplePod/thumbnail.jpeg'),\n      'title': \"ModPod\",\n      'question': \"How can **Autnomous Vehichles** be used to tackle the **Last Mile Problem**?\",\n      'col': \"col-md-4\",\n      'category': ['str', 'des'],\n      'month': 'June',\n      'year': '2016'\n    };\n    const revEng = {\n      'key': 'revEng',\n      'link': \"/revEng\",\n      'image': require('./../content/projects/revEng/thumbnail.jpg'),\n      'title': \"RevEng\",\n      'question': \"How can **Thermodynamics and Material Analysis** be used to make the **Products More Sustainable**?\",\n      'col': \"col-md-8\",\n      'category': ['str', 'eng'],\n      'month': 'March',\n      'year': '2016'\n    };\n    const spiro = {\n      'key': 'spiro',\n      'link': \"/spiro\",\n      'image': require('./../content/projects/spiro/thumbnail.png'),\n      'title': \"Spiro\",\n      'question': \"How can a cost-effective way to **Measure Lung Capacity** be used to help **diagnose COPD globally**?\",\n      'col': \"col-md-4\",\n      'category': ['cod', 'str'],\n      'month': 'June',\n      'year': '2017'\n    };\n    this.state = {\n      activeFilter: [true, false, false, false, false, false, false, false, false, false],\n      projects: projectData.projects.sort((a, b) => parseInt(b.year) - parseInt(a.year))\n    };\n    this.state.filterProjects = this.state.projects;\n    this.filter = this.filter.bind(this);\n  }\n\n  filter(i, category) {\n    var activeFilter = [false, false, false, false, false, false, false, false, false, false];\n    activeFilter[i] = true;\n    this.setState({\n      filterIndex: i,\n      activeFilter: activeFilter,\n      filterProjects: category === 'all' ? this.state.projects : this.state.projects.filter(project => project.category.includes(category))\n    });\n  }\n\n  render() {\n    const activeFilter = this.state.activeFilter;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"portfolio-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"portfolio-filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: activeFilter[0] ? \"filter-active\" : \"filter-inactive\",\n      onClick: () => this.filter(0, 'all'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    }, \"All\"), /*#__PURE__*/React.createElement(\"li\", {\n      className: activeFilter[1] ? \"filter-active\" : \"filter-inactive\",\n      onClick: () => this.filter(1, 'cod'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }\n    }, \"Coding and Electronics\"), /*#__PURE__*/React.createElement(\"li\", {\n      className: activeFilter[2] ? \"filter-active\" : \"filter-inactive\",\n      onClick: () => this.filter(2, 'des'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }\n    }, \"Design\"), /*#__PURE__*/React.createElement(\"li\", {\n      className: activeFilter[3] ? \"filter-active\" : \"filter-inactive\",\n      onClick: () => this.filter(3, 'eng'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }\n    }, \"Engineering Analysis\"), /*#__PURE__*/React.createElement(\"li\", {\n      className: activeFilter[4] ? \"filter-active\" : \"filter-inactive\",\n      onClick: () => this.filter(4, 'str'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }\n    }, \"Enterprise and Systems\"))), /*#__PURE__*/React.createElement(TransitionGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CSSTransition, {\n      classNames: \"portfolioFade\",\n      timeout: 800,\n      key: this.state.filterIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid p-md-0 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row portfolio-area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 14\n      }\n    }, this.state.filterProjects.map(thumbnail => /*#__PURE__*/React.createElement(Thumbnail, {\n      key: thumbnail.title,\n      link: thumbnail.link,\n      image: require(thumbnail.image),\n      title: thumbnail.title,\n      question: thumbnail.question,\n      col: thumbnail.col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }\n    })))))));\n  }\n\n}\n\nexport default Projects;","map":{"version":3,"sources":["/Users/william/Documents/GitHub/portfolio/src/components/Projects.js"],"names":["React","Thumbnail","CSSTransition","TransitionGroup","projectData","Projects","Component","constructor","props","balancingRobot","require","beatbox","bigData","blueNote","embla","joyStory","jumpingRobot","pacman","panaseer","pause","peoplePod","revEng","spiro","state","activeFilter","projects","sort","a","b","parseInt","year","filterProjects","filter","bind","i","category","setState","filterIndex","project","includes","render","map","thumbnail","title","link","image","question","col"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Thumbnail from './Thumbnail.js'; // Import the Thumbnail component\nimport '../css/App.css';\n\nimport {CSSTransition,TransitionGroup} from 'react-transition-group';\n\nimport projectData from './projects.json';\n\nclass Projects extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const balancingRobot = {\n      'key':'balancingRobot',\n      'link':\"/balancingRobot\",\n      'image':require('./../content/projects/balancingRobot/thumbnail.png'),\n      'title':\"Strip The Willow\",\n      'question':\"How can **Signal Processing** be used to create a **Dancing Robot**?\",\n      'col':\"col-md-4\",\n      'category':['cod'],\n      'month':'April',\n      'year':'2018'\n    }\n\n    const beatbox = {\n      'key':'beatbox',\n      'link':\"/beatbox\",\n      'image':require('./../content/projects/beatbox/thumbnail.jpg'),\n      'title':\"Beatbox\",\n      'question':\"How can **Heart Rate** be visualised using **Mechatronics**?\",\n      'col':\"col-md-4\",\n      'category':['cod'],\n      'month':'December',\n      'year':'2017'\n    }\n\n    const bigData = {\n      'key':'bigData',\n      'link':\"/bigData\",\n      'image':require('./../content/projects/bigData/thumbnail.jpg'),\n      'title':\"Big Data\",\n      'question':\"How can **Data Analytics** be used to **Explain and Predict** knife crime in London ?\",\n      'col':\"col-md-4\",\n      'category':['cod'],\n      'month':'June',\n      'year':'2018'\n    }\n\n    const blueNote = {\n      'key':'blueNote',\n      'link':\"/blueNote\",\n      'image':require('./../content/projects/blueNote/thumbnail.png'),\n      'title':\"BlueNote\",\n      'question':\"How can **Bluetooth Low Energy** be used to **Deliver Timely Notifications**?\",\n      'col':\"col-md-4\",\n      'category':['cod','str'],\n      'month':'January',\n      'year':'2020'\n    }\n\n    const embla = {\n      'key':'embla',\n      'link':\"/embla\",\n      'image':require('./../content/projects/embla/thumbnail.png'),\n      'title':\"Embla\",\n      'question':\"How can **Workplace Environments** be designed to **Reduce Stress**?\",\n      'col':\"col-md-8\",\n      'category':['str','des'],\n      'month':'April',\n      'year':'2019'\n    }\n\n    const joyStory = {\n      'key':'joyStory',\n      'link':\"/joyStory\",\n      'image':require('./../content/projects/joyStory/thumbnail.png'),\n      'title':\"JoyStory\",\n      'question':\"How can **A Collaborative Game** be used to **Build Relationships**?\",\n      'col':\"col-md-4\",\n      'category':['cod','str'],\n      'month':'March',\n      'year':'2020'\n    }\n\n    const jumpingRobot = {\n      'key':'jumpingRobot',\n      'link':\"/jumpingRobot\",\n      'image':require('./../content/projects/jumpingRobot/thumbnail.png'),\n      'title':\"LeapFrog\",\n      'question':\"How can **Mechanics, Finite Element Analysis and 3D Modelling** be used to design a **Jumping Robot**?\",\n      'col':\"col-md-4\",\n      'category':['eng'],\n      'month':'April',\n      'year':'2018'\n    }\n\n    const pacman = {\n      'key':'pacman',\n      'link':\"/pacman\",\n      'image':require('./../content/projects/pacman/thumbnail.png'),\n      'title':\"Pacman\",\n      'question':\"How can **Algorithm Design** be used to **Optimise** Pacman?\",\n      'col':\"col-md-4\",\n      'category':['cod'],\n      'month':'December',\n      'year':'2016'\n    }\n\n    const panaseer = {\n      'key':'panaseer',\n      'link':\"/panaseer\",\n      'image':require('./../content/projects/panaseer/thumbnail.png'),\n      'title':\"Panaseer\",\n      'question':\"How can a **novel innovation in food sensing** be used to help **Allergy Sufferers**?\",\n      'col':\"col-md-4\",\n      'category':['des'],\n      'month':'March',\n      'year':'2019'\n    }\n\n    const pause = {\n      'key':'pause',\n      'link':\"/pause\",\n      'image':require('./../content/projects/pause/thumbnail.png'),\n      'title':\"Pause\",\n      'question':\"How can **Behavioural Psychology** be used to address **Social Media Addiction**?\",\n      'col':\"col-md-4\",\n      'category':['des'],\n      'month':'March',\n      'year':'2020'\n    }\n\n    const peoplePod = {\n      'key':'peoplePod',\n      'link':\"/peoplePod\",\n      'image':require('./../content/projects/peoplePod/thumbnail.jpeg'),\n      'title':\"ModPod\",\n      'question':\"How can **Autnomous Vehichles** be used to tackle the **Last Mile Problem**?\",\n      'col':\"col-md-4\",\n      'category':['str','des'],\n      'month':'June',\n      'year':'2016'\n    }\n\n    const revEng = {\n      'key':'revEng',\n      'link':\"/revEng\",\n      'image':require('./../content/projects/revEng/thumbnail.jpg'),\n      'title':\"RevEng\",\n      'question':\"How can **Thermodynamics and Material Analysis** be used to make the **Products More Sustainable**?\",\n      'col':\"col-md-8\",\n      'category':['str','eng'],\n      'month':'March',\n      'year':'2016'\n    }\n\n    const spiro = {\n      'key':'spiro',\n      'link':\"/spiro\",\n      'image':require('./../content/projects/spiro/thumbnail.png'),\n      'title':\"Spiro\",\n      'question':\"How can a cost-effective way to **Measure Lung Capacity** be used to help **diagnose COPD globally**?\",\n      'col':\"col-md-4\",\n      'category':['cod','str'],\n      'month':'June',\n      'year':'2017'\n    }\n\n    this.state = {\n      activeFilter:[true,false,false,false,false,false,false,false,false,false],\n      projects: projectData.projects.sort((a,b) => parseInt(b.year)-parseInt(a.year)),\n    }\n\n    this.state.filterProjects=this.state.projects\n\n    this.filter = this.filter.bind(this)\n  }\n\n  filter(i, category){\n    var activeFilter=[false,false,false,false,false,false,false,false,false,false];\n    activeFilter[i] = true;\n    this.setState({\n      filterIndex:i,\n      activeFilter:activeFilter,\n      filterProjects:(category==='all') ? this.state.projects : this.state.projects.filter(project => project.category.includes(category))\n    });\n  }\n\n\n\n  render() {\n    const activeFilter = this.state.activeFilter\n    return (\n        <section className=\"portfolio-section\">\n      \t\t<div className=\"container\">\n      \t\t\t<ul className=\"portfolio-filter\">\n      \t\t\t\t<li className={activeFilter[0]? \"filter-active\" : \"filter-inactive\"} onClick={() => this.filter(0, 'all')}>All</li>\n      \t\t\t\t<li className={activeFilter[1]? \"filter-active\" : \"filter-inactive\"} onClick={() => this.filter(1, 'cod')}>Coding and Electronics</li>\n      \t\t\t\t<li className={activeFilter[2]? \"filter-active\" : \"filter-inactive\"} onClick={() => this.filter(2, 'des')}>Design</li>\n      \t\t\t\t<li className={activeFilter[3]? \"filter-active\" : \"filter-inactive\"} onClick={() => this.filter(3, 'eng')}>Engineering Analysis</li>\n      \t\t\t\t<li className={activeFilter[4]? \"filter-active\" : \"filter-inactive\"} onClick={() => this.filter(4, 'str')}>Enterprise and Systems</li>\n      \t\t\t</ul>\n      \t\t</div>\n          <TransitionGroup>\n            <CSSTransition\n                    classNames=\"portfolioFade\"\n                    timeout={800}\n                    key={this.state.filterIndex}\n                  >\n          \t\t<div className=\"container-fluid p-md-0 \">\n          \t\t\t<div className=\"row portfolio-area\">\n                  {this.state.filterProjects.map((thumbnail) => (\n                    <Thumbnail\n                      key={thumbnail.title}\n                      link={thumbnail.link}\n                      image={require(thumbnail.image)}\n                      title={thumbnail.title}\n                      question={thumbnail.question}\n                      col={thumbnail.col}\n                      />\n                  ))}\n          \t\t\t</div>\n          \t\t</div>\n            </CSSTransition>\n          </TransitionGroup>\n      \t</section>\n\n    )\n  }\n}\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}