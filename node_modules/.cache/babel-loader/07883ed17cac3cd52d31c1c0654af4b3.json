{"ast":null,"code":"var _jsxFileName = \"/Users/william/Documents/GitHub/portfolio/src/components/Mixitup.js\";\nconst Filters = React.createClass({\n  displayName: \"Filters\",\n\n  getInitialState() {\n    return {\n      // Just filtering by type for now, but this will be an object\n      filter: '',\n      items: [{\n        id: 1,\n        title: 'Papyrus',\n        type: 'ecommerce'\n      }, {\n        id: 2,\n        title: 'Clinton Foundation',\n        type: 'intranet'\n      }, {\n        id: 3,\n        title: 'Maddie',\n        type: 'ecommerce'\n      }, {\n        id: 4,\n        title: 'WCHN',\n        type: 'intranet'\n      }]\n    };\n  },\n\n  renderItems() {\n    let items = this.state.items;\n\n    if (this.state.filter !== '') {\n      items = this.state.items.filter(item => {\n        return item.type === this.state.filter;\n      });\n    } // mixer would really be part of the component (this.mixer)\n\n\n    window.mixer.dataset(items);\n  },\n\n  applyFilter(filter) {\n    this.setState({\n      filter\n    }, this.renderItems);\n  },\n\n  filter(e) {\n    console.log(e.target.value);\n    this.applyFilter(e.target.value);\n  },\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, \"Filters\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.applyFilter.bind(this, ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, \"Show all\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.applyFilter.bind(this, 'ecommerce'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, \"Show ecommerce\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.applyFilter.bind(this, 'intranet'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, \"Show intranets\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.filter.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }));\n  }\n\n});\nReactDOM.render( /*#__PURE__*/React.createElement(Filters, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 17\n  }\n}), document.getElementById(\"filters\"));\n\nconst renderItem = item => {\n  return `<li data-ref=\"item\">${item.title}</li>`;\n};\n\nconst mixer = mixitup(document.getElementById('items'), {\n  data: {\n    uidKey: 'id'\n  },\n  render: {\n    target: renderItem\n  },\n  selectors: {\n    target: '[data-ref=\"item\"]'\n  }\n});\nwindow.mixer = mixer;","map":{"version":3,"sources":["/Users/william/Documents/GitHub/portfolio/src/components/Mixitup.js"],"names":["Filters","React","createClass","getInitialState","filter","items","id","title","type","renderItems","state","item","window","mixer","dataset","applyFilter","setState","e","console","log","target","value","render","bind","ReactDOM","document","getElementById","renderItem","mixitup","data","uidKey","selectors"],"mappings":"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","sourcesContent":["const Filters = React.createClass({\n  getInitialState() {\n    return {\n      // Just filtering by type for now, but this will be an object\n      filter: '',\n      items: [\n        {\n          id: 1,\n          title: 'Papyrus',\n          type: 'ecommerce',\n        },\n        {\n          id: 2,\n          title: 'Clinton Foundation',\n          type: 'intranet'\n        },\n        {\n          id: 3,\n          title: 'Maddie',\n          type: 'ecommerce',\n        },\n        {\n          id: 4,\n          title: 'WCHN',\n          type: 'intranet',\n        },\n      ],\n    };\n  },\n\n  renderItems() {\n    let items = this.state.items;\n    if (this.state.filter !== '') {\n      items = this.state.items.filter(item => {\n        return item.type === this.state.filter;\n      });\n    }\n    // mixer would really be part of the component (this.mixer)\n    window.mixer.dataset(items);\n  },\n\n  applyFilter(filter) {\n    this.setState({ filter }, this.renderItems);\n  },\n\n  filter(e) {\n    console.log(e.target.value)\n    this.applyFilter(e.target.value)\n  },\n\n  render() {\n    return (\n      <div>\n        <h2>Filters</h2>\n        <button type=\"button\" onClick={this.applyFilter.bind(this, '')}>Show all</button>\n        <button type=\"button\" onClick={this.applyFilter.bind(this, 'ecommerce')}>Show ecommerce</button>\n        <button type=\"button\" onClick={this.applyFilter.bind(this, 'intranet')}>Show intranets</button>\n        <br /><br />\n        <input type=\"text\" onChange={this.filter.bind(this)} />\n      </div>\n    );\n  },\n});\n\nReactDOM.render(<Filters />, document.getElementById(\"filters\"));\n\nconst renderItem = item => {\n  return `<li data-ref=\"item\">${item.title}</li>`;\n};\nconst mixer = mixitup(document.getElementById('items'), {\n  data: { uidKey: 'id' },\n  render: { target: renderItem },\n  selectors: {\n    target: '[data-ref=\"item\"]',\n  }\n});\nwindow.mixer = mixer;\n"]},"metadata":{},"sourceType":"module"}