{"ast":null,"code":"var _jsxFileName = \"/Users/william/Documents/GitHub/portfolio/src/components/projectPage/projectCarousel.js\";\nimport React, { useState, useEffect, useRef } from 'react'; // Import the Component component from React\n\nimport Carousel from 'nuka-carousel';\n\nfunction ProjectCarousel(props) {\n  // Fixes Carousel not loading initially\n  const carouselRef = useRef(null);\n  useEffect(() => {\n    setTimeout(() => {\n      carouselRef.current.onResize();\n    }, 0);\n  }, []); // Capture Scroll Up and Down\n\n  const [goingUp, setGoingUp] = useState(false);\n  const prevScrollY = useRef(0);\n  useEffect(() => {\n    const handleScroll = () => {\n      const currentScrollY = window.scrollY;\n\n      if (prevScrollY.current < currentScrollY && goingUp) {\n        setGoingUp(false);\n      }\n\n      if (prevScrollY.current > currentScrollY && !goingUp) {\n        setGoingUp(true);\n      }\n\n      prevScrollY.current = currentScrollY;\n      console.log(goingUp, currentScrollY);\n    };\n\n    window.addEventListener(\"scroll\", handleScroll, {\n      passive: true\n    });\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, [goingUp]);\n  return /*#__PURE__*/React.createElement(Carousel, {\n    enableKeyboardControls: true,\n    disableEdgeSwiping: true,\n    heightMode: \"max\",\n    speed: 500,\n    withoutControls: true,\n    width: \"100%\",\n    vertical: false,\n    ref: carouselRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, props.jsx);\n}\n\nexport default ProjectCarousel;","map":{"version":3,"sources":["/Users/william/Documents/GitHub/portfolio/src/components/projectPage/projectCarousel.js"],"names":["React","useState","useEffect","useRef","Carousel","ProjectCarousel","props","carouselRef","setTimeout","current","onResize","goingUp","setGoingUp","prevScrollY","handleScroll","currentScrollY","window","scrollY","console","log","addEventListener","passive","removeEventListener","jsx"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD,C,CAA4D;;AAC5D,OAAOC,QAAP,MAAqB,eAArB;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B;AACA,QAAMC,WAAW,GAAGJ,MAAM,CAAC,IAAD,CAA1B;AACED,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,UAAU,CAAC,MAAM;AAACD,MAAAA,WAAW,CAACE,OAAZ,CAAoBC,QAApB;AAAgC,KAAxC,EAA0C,CAA1C,CAAV;AACD,GAFQ,EAEN,EAFM,CAAT,CAH4B,CAQ9B;;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMY,WAAW,GAAGV,MAAM,CAAC,CAAD,CAA1B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,YAAY,GAAG,MAAM;AACzB,YAAMC,cAAc,GAAGC,MAAM,CAACC,OAA9B;;AACA,UAAIJ,WAAW,CAACJ,OAAZ,GAAsBM,cAAtB,IAAwCJ,OAA5C,EAAqD;AACnDC,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AACD,UAAIC,WAAW,CAACJ,OAAZ,GAAsBM,cAAtB,IAAwC,CAACJ,OAA7C,EAAsD;AACpDC,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD;;AAEDC,MAAAA,WAAW,CAACJ,OAAZ,GAAsBM,cAAtB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ,EAAqBI,cAArB;AACD,KAXD;;AAaAC,IAAAA,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkCN,YAAlC,EAAgD;AAAEO,MAAAA,OAAO,EAAE;AAAX,KAAhD;AAEA,WAAO,MAAML,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqCR,YAArC,CAAb;AACD,GAjBQ,EAiBN,CAACH,OAAD,CAjBM,CAAT;AAmBA,sBACE,oBAAC,QAAD;AACE,IAAA,sBAAsB,EAAE,IAD1B;AAEE,IAAA,kBAAkB,EAAE,IAFtB;AAGE,IAAA,UAAU,EAAC,KAHb;AAIE,IAAA,KAAK,EAAE,GAJT;AAKE,IAAA,eAAe,EAAE,IALnB;AAME,IAAA,KAAK,EAAC,MANR;AAOE,IAAA,QAAQ,EAAE,KAPZ;AAQE,IAAA,GAAG,EAAEJ,WARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUED,KAAK,CAACiB,GAVR,CADF;AAcD;;AAED,eAAelB,eAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'; // Import the Component component from React\nimport Carousel from 'nuka-carousel';\n\nfunction ProjectCarousel(props) {\n  // Fixes Carousel not loading initially\n  const carouselRef = useRef(null)\n    useEffect(() => {\n      setTimeout(() => {carouselRef.current.onResize();}, 0);\n    }, [])\n\n\n  // Capture Scroll Up and Down\n  const [goingUp, setGoingUp] = useState(false);\n  const prevScrollY = useRef(0);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const currentScrollY = window.scrollY;\n      if (prevScrollY.current < currentScrollY && goingUp) {\n        setGoingUp(false);\n      }\n      if (prevScrollY.current > currentScrollY && !goingUp) {\n        setGoingUp(true);\n      }\n\n      prevScrollY.current = currentScrollY;\n      console.log(goingUp, currentScrollY);\n    };\n\n    window.addEventListener(\"scroll\", handleScroll, { passive: true });\n\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, [goingUp]);\n\n  return(\n    <Carousel\n      enableKeyboardControls={true}\n      disableEdgeSwiping={true}\n      heightMode=\"max\"\n      speed={500}\n      withoutControls={true}\n      width=\"100%\"\n      vertical={false}\n      ref={carouselRef}\n      >\n    \t{props.jsx}\n    </Carousel>\n  )\n}\n\nexport default ProjectCarousel;\n"]},"metadata":{},"sourceType":"module"}