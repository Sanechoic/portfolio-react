{"ast":null,"code":"var _jsxFileName = \"/Users/william/Documents/GitHub/portfolio/src/components/projectPage/slideInfo.js\";\nimport React, { useState, useEffect, useRef } from 'react';\n\nfunction SlideInfo(props) {\n  const [isExpanded, toggleExpanded] = useState(false);\n  useEffect(() => {\n    const node = ref.current;\n\n    if (node) {\n      node.addEventListener('mouseover', handleMouseOver);\n      node.addEventListener('mouseout', handleMouseOut);\n      return () => {\n        node.removeEventListener('mouseover', handleMouseOver);\n        node.removeEventListener('mouseout', handleMouseOut);\n      };\n    }\n  }, [ref.current] // Recall only if ref changes\n  );\n\n  const handleMove = e => {\n    console.log(e.offsetX);\n    console.log(width * 0.7);\n\n    if (e.offsetX > Math.abs(width * 0.7) && !isExpanded) {\n      toggleExpanded(true);\n    } else if (e.offsetX < Math.abs(width * 0.7)) {\n      toggleExpanded(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"infoIcon\",\n    style: {\n      right: `${isExpanded ? '30vw' : '2vw'}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: `${isExpanded ? \"fa fa-chevron-right\" : \"fa fa-chevron-left\"}`,\n    \"aria-hidden\": \"true\",\n    onClick: () => {\n      toggleExpanded(!isExpanded);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: `slideInfo ${isExpanded ? \"expanded\" : \"collapsed\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, props.info[0]), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, props.info[1])));\n}\n\nexport default SlideInfo;","map":{"version":3,"sources":["/Users/william/Documents/GitHub/portfolio/src/components/projectPage/slideInfo.js"],"names":["React","useState","useEffect","useRef","SlideInfo","props","isExpanded","toggleExpanded","node","ref","current","addEventListener","handleMouseOver","handleMouseOut","removeEventListener","handleMove","e","console","log","offsetX","width","Math","abs","right","info"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAExB,QAAM,CAACC,UAAD,EAAaC,cAAb,IAA+BN,QAAQ,CAAC,KAAD,CAA7C;AAEAC,EAAAA,SAAS,CACR,MAAM;AACJ,UAAMM,IAAI,GAAGC,GAAG,CAACC,OAAjB;;AACA,QAAIF,IAAJ,EAAU;AACRA,MAAAA,IAAI,CAACG,gBAAL,CAAsB,WAAtB,EAAmCC,eAAnC;AACAJ,MAAAA,IAAI,CAACG,gBAAL,CAAsB,UAAtB,EAAkCE,cAAlC;AAEA,aAAO,MAAM;AACXL,QAAAA,IAAI,CAACM,mBAAL,CAAyB,WAAzB,EAAsCF,eAAtC;AACAJ,QAAAA,IAAI,CAACM,mBAAL,CAAyB,UAAzB,EAAqCD,cAArC;AACD,OAHD;AAID;AACF,GAZO,EAaR,CAACJ,GAAG,CAACC,OAAL,CAbQ,CAaM;AAbN,GAAT;;AAgBA,QAAMK,UAAU,GAAGC,CAAC,IAAI;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,OAAd;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,GAAC,GAAlB;;AACA,QAAKJ,CAAC,CAACG,OAAF,GAAYE,IAAI,CAACC,GAAL,CAASF,KAAK,GAAC,GAAf,CAAb,IAAqC,CAACd,UAA1C,EAAsD;AACpDC,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD,KAFD,MAEO,IAAIS,CAAC,CAACG,OAAF,GAAYE,IAAI,CAACC,GAAL,CAASF,KAAK,GAAC,GAAf,CAAhB,EAAqC;AAC1Cb,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD;AACF,GARD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAACgB,MAAAA,KAAK,EAAE,GAAEjB,UAAU,GAAG,MAAH,GAAU,KAAM;AAApC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAG,GAAEA,UAAU,GAAG,qBAAH,GAA2B,oBAAqB,EAD1E;AAEE,mBAAY,MAFd;AAGE,IAAA,OAAO,EAAE,MAAM;AAACC,MAAAA,cAAc,CAAC,CAACD,UAAF,CAAd;AAA6B,KAH/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAK,IAAA,SAAS,EAAG,aAAYA,UAAU,GAAG,UAAH,GAAc,WAAY,EAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,KAAK,CAACmB,IAAN,CAAW,CAAX,CAAL,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKnB,KAAK,CAACmB,IAAN,CAAW,CAAX,CAAL,CAFF,CAPF,CADF;AAcD;;AAID,eAAepB,SAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nfunction SlideInfo(props) {\n\n  const [isExpanded, toggleExpanded] = useState(false);\n\n  useEffect(\n   () => {\n     const node = ref.current;\n     if (node) {\n       node.addEventListener('mouseover', handleMouseOver);\n       node.addEventListener('mouseout', handleMouseOut);\n\n       return () => {\n         node.removeEventListener('mouseover', handleMouseOver);\n         node.removeEventListener('mouseout', handleMouseOut);\n       };\n     }\n   },\n   [ref.current] // Recall only if ref changes\n );\n\n  const handleMove = e => {\n    console.log(e.offsetX)\n    console.log(width*0.7)\n    if ((e.offsetX > Math.abs(width*0.7)) && !isExpanded) {\n      toggleExpanded(true)\n    } else if (e.offsetX < Math.abs(width*0.7)) {\n      toggleExpanded(false)\n    }\n  }\n\n  return(\n    <div className='infoIcon' style={{right:`${isExpanded ? '30vw':'2vw'}`}}>\n      <i\n        className={`${isExpanded ? \"fa fa-chevron-right\" : \"fa fa-chevron-left\"}`}\n        aria-hidden=\"true\"\n        onClick={() => {toggleExpanded(!isExpanded);}}\n\n      />\n      <div className={`slideInfo ${isExpanded ? \"expanded\":\"collapsed\"}`}>\n        <h1>{props.info[0]}</h1>\n        <h2>{props.info[1]}</h2>\n      </div>\n    </div>\n  )\n}\n\n\n\nexport default SlideInfo;\n"]},"metadata":{},"sourceType":"module"}