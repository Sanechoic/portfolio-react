{"ast":null,"code":"var _jsxFileName = \"/Users/william/Documents/GitHub/portfolio/src/components/projectPage/slideImage.js\";\nimport React, { useState, useEffect, useRef } from 'react';\n\nfunction SlideImage(props) {\n  const mobile = useWindowWidth() <= 991;\n  const slide = useRef();\n  const [fullScreen, toggleFullscreen] = useState(false);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slide\",\n    onClick: () => toggleFullscreen(!fullScreen),\n    ref: slide,\n    style: {\n      backgroundImage: \"url(\" + (mobile ? \"\" : props.image) + \")\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: mobile ? props.image : \"\",\n    style: {\n      display: mobile ? \"\" : \"none\"\n    },\n    alt: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }));\n}\n\nconst useWindowWidth = () => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  useEffect(() => {\n    const handleWindowResize = () => {\n      setWindowWidth(window.innerWidth);\n    };\n\n    window.addEventListener('resize', handleWindowResize);\n    return () => window.removeEventListener('resize', handleWindowResize);\n  }, []);\n  return windowWidth;\n};\n\nexport default SlideImage;","map":{"version":3,"sources":["/Users/william/Documents/GitHub/portfolio/src/components/projectPage/slideImage.js"],"names":["React","useState","useEffect","useRef","SlideImage","props","mobile","useWindowWidth","slide","fullScreen","toggleFullscreen","backgroundImage","image","display","windowWidth","setWindowWidth","window","innerWidth","handleWindowResize","addEventListener","removeEventListener"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;AAGA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,QAAMC,MAAM,GAAGC,cAAc,MAAM,GAAnC;AAEA,QAAMC,KAAK,GAAGL,MAAM,EAApB;AACA,QAAM,CAACM,UAAD,EAAaC,gBAAb,IAAiCT,QAAQ,CAAC,KAAD,CAA/C;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,OAAO,EAAE,MAAMS,gBAAgB,CAAC,CAACD,UAAF,CAAtD;AAAqE,IAAA,GAAG,EAAED,KAA1E;AAAiF,IAAA,KAAK,EAAE;AAACG,MAAAA,eAAe,EAAC,UAAQL,MAAM,GAAG,EAAH,GAAQD,KAAK,CAACO,KAA5B,IAAmC;AAApD,KAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEN,MAAM,GAAGD,KAAK,CAACO,KAAT,GAAiB,EAAjC;AAAqC,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAEP,MAAM,GAAG,EAAH,GAAQ;AAAxB,KAA5C;AAA8E,IAAA,GAAG,EAAC,SAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AAED,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAiCd,QAAQ,CAACe,MAAM,CAACC,UAAR,CAA/C;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMgB,kBAAkB,GAAG,MAAM;AAC7BH,MAAAA,cAAc,CAACC,MAAM,CAACC,UAAR,CAAd;AACH,KAFD;;AAIAD,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCD,kBAAlC;AACA,WAAO,MAAMF,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCF,kBAArC,CAAb;AACH,GAPQ,EAOP,EAPO,CAAT;AASA,SAAOJ,WAAP;AACD,CAbD;;AAeA,eAAeV,UAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\n\nfunction SlideImage(props) {\n  const mobile = useWindowWidth() <= 991;\n\n  const slide = useRef();\n  const [fullScreen, toggleFullscreen] = useState(false);\n\n\n\n\n  return(\n    <div className=\"slide\" onClick={() => toggleFullscreen(!fullScreen)} ref={slide} style={{backgroundImage:\"url(\"+(mobile ? \"\" : props.image)+\")\"}}>\n      <img src={mobile ? props.image : \"\"} style={{display:(mobile ? \"\" : \"none\")}} alt=\"default\"/>\n    </div>\n  )\n}\n\nconst useWindowWidth = () => {\n  const [windowWidth, setWindowWidth ] = useState(window.innerWidth);\n\n  useEffect(() => {\n      const handleWindowResize = () => {\n          setWindowWidth(window.innerWidth);\n      };\n\n      window.addEventListener('resize', handleWindowResize);\n      return () => window.removeEventListener('resize', handleWindowResize);\n  },[]);\n\n  return windowWidth;\n};\n\nexport default SlideImage;\n"]},"metadata":{},"sourceType":"module"}