{"ast":null,"code":"var _jsxFileName = \"/Users/william/Documents/GitHub/portfolio/src/components/Mixitup.js\";\nimport * as React from 'react';\nimport ReactMixitup from 'react-mixitup';\nimport { shuffle, range } from 'lodash';\n\nclass Example extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: [1, 2, 3, 4]\n    };\n\n    this.shuffle = () => this.setState({\n      items: shuffle(range(Math.round(Math.random() * 15)))\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.shuffle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, \"Shuffle\"), /*#__PURE__*/React.createElement(ReactMixitup, {\n      items: this.state.items,\n      renderCells: items => /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          background: 'yellow'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }\n      }, items.map(({\n        key,\n        ref,\n        style\n      }) => /*#__PURE__*/React.createElement(\"div\", {\n        key: key,\n        ref: ref,\n        style: { ...style,\n          background: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }\n      }, key))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/william/Documents/GitHub/portfolio/src/components/Mixitup.js"],"names":["React","ReactMixitup","shuffle","range","Example","Component","state","items","setState","Math","round","random","render","background","map","key","ref","style"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,SAASC,OAAT,EAAkBC,KAAlB,QAA+B,QAA/B;;AAEA,MAAMC,OAAN,SAAsBJ,KAAK,CAACK,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCC,KADoC,GAC5B;AAAEC,MAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV;AAAT,KAD4B;;AAAA,SAGpCL,OAHoC,GAG1B,MACR,KAAKM,QAAL,CAAc;AACZD,MAAAA,KAAK,EAAEL,OAAO,CAACC,KAAK,CAACM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAD,CAAN;AADF,KAAd,CAJkC;AAAA;;AAQpCC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,OAAO,EAAE,KAAKV,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,YAAD;AACE,MAAA,KAAK,EAAE,KAAKI,KAAL,CAAWC,KADpB;AAEE,MAAA,WAAW,EAAEA,KAAK,iBAChB;AAAK,QAAA,KAAK,EAAE;AAAEM,UAAAA,UAAU,EAAE;AAAd,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGN,KAAK,CAACO,GAAN,CAAU,CAAC;AAAEC,QAAAA,GAAF;AAAOC,QAAAA,GAAP;AAAYC,QAAAA;AAAZ,OAAD,kBACT;AAAK,QAAA,GAAG,EAAEF,GAAV;AAAe,QAAA,GAAG,EAAEC,GAApB;AAAyB,QAAA,KAAK,EAAE,EAAE,GAAGC,KAAL;AAAYJ,UAAAA,UAAU,EAAE;AAAxB,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGE,GADH,CADD,CADH,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAiBD;;AA1BmC","sourcesContent":["import * as React from 'react'\nimport ReactMixitup from 'react-mixitup'\nimport { shuffle, range } from 'lodash'\n\nclass Example extends React.Component {\n  state = { items: [1, 2, 3, 4] }\n\n  shuffle = () =>\n    this.setState({\n      items: shuffle(range(Math.round(Math.random() * 15)))\n    })\n\n  render() {\n    return (\n      <Fragment>\n        <button onClick={this.shuffle}>Shuffle</button>\n        <ReactMixitup\n          items={this.state.items}\n          renderCells={items => (\n            <div style={{ background: 'yellow' }}>\n              {items.map(({ key, ref, style }) => (\n                <div key={key} ref={ref} style={{ ...style, background: 'red' }}>\n                  {key}\n                </div>\n              ))}\n            </div>\n          )}\n        />\n      </Fragment>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}