{"ast":null,"code":"var _jsxFileName = \"/Users/william/Documents/GitHub/portfolio/src/components/Mixitup.js\";\nimport * as React from 'react';\nimport ReactMixitup from 'react-mixitup';\nimport { shuffle, range } from 'lodash';\n\nconst Example = () => {\n  const [keys, setKeys] = useState([1, 2, 3, 4]);\n  const updateKeys = useCallback(() => {\n    setKeys(updateKeys(range(Math.round(Math.random() * 15))));\n  }, []);\n  const renderCell = useCallback(({\n    key,\n    ref,\n    style\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    key: key,\n    ref: ref,\n    style: { ...style,\n      background: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, key), []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: updateKeys,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, \"Shuffle\"), /*#__PURE__*/React.createElement(ReactMixitup, {\n    renderCell: renderCell,\n    keys: keys,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Example;","map":{"version":3,"sources":["/Users/william/Documents/GitHub/portfolio/src/components/Mixitup.js"],"names":["React","ReactMixitup","shuffle","range","Example","keys","setKeys","useState","updateKeys","useCallback","Math","round","random","renderCell","key","ref","style","background"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,SAASC,OAAT,EAAkBC,KAAlB,QAA+B,QAA/B;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAD,CAAhC;AAEA,QAAMC,UAAU,GAAGC,WAAW,CAAC,MAAM;AACnCH,IAAAA,OAAO,CAACE,UAAU,CAACL,KAAK,CAACO,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAD,CAAN,CAAX,CAAP;AACD,GAF6B,EAE3B,EAF2B,CAA9B;AAIA,QAAMC,UAAU,GAAGJ,WAAW,CAAC,CAAC;AAAEK,IAAAA,GAAF;AAAOC,IAAAA,GAAP;AAAYC,IAAAA;AAAZ,GAAD,kBAC7B;AAAK,IAAA,GAAG,EAAEF,GAAV;AAAe,IAAA,GAAG,EAAEC,GAApB;AAAyB,IAAA,KAAK,EAAE,EAAE,GAAGC,KAAL;AAAYC,MAAAA,UAAU,EAAE;AAAxB,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,GADH,CAD4B,EAI3B,EAJ2B,CAA9B;AAMA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEN,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,oBAAC,YAAD;AAAc,IAAA,UAAU,EAAEK,UAA1B;AAAsC,IAAA,IAAI,EAAER,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAnBD;;AAqBA,eAAeD,OAAf","sourcesContent":["import * as React from 'react'\nimport ReactMixitup from 'react-mixitup'\nimport { shuffle, range } from 'lodash'\n\nconst Example = () => {\n  const [keys, setKeys] = useState([1, 2, 3, 4]);\n\n  const updateKeys = useCallback(() => {\n    setKeys(updateKeys(range(Math.round(Math.random() * 15))));\n  }, []);\n\n  const renderCell = useCallback(({ key, ref, style }) => (\n    <div key={key} ref={ref} style={{ ...style, background: 'red' }}>\n      {key}\n    </div>\n  ), []);\n\n  return (\n    <Fragment>\n      <button onClick={updateKeys}>Shuffle</button>\n      <ReactMixitup renderCell={renderCell} keys={keys} />\n    </Fragment>\n  );\n};\n\nexport default Example;\n"]},"metadata":{},"sourceType":"module"}